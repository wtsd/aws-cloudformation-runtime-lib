
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  API Gateway (proxy) + Lambda (Python) hello-world.
  Creates log groups, execution role, Lambda function with inline code, and REST API with /hello GET.
Parameters:
  AppName:
    Type: String
    Default: python-api
  StageName:
    Type: String
    Default: prod
Resources:
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AppName}"
      RetentionInDays: 14

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: lambda.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  Function:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref AppName
      Architectures: [x86_64]
      Runtime: python3.12
      Handler: index.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Timeout: 10
      Code:
        ZipFile: |
      def lambda_handler(event, context):
          return {
              "statusCode": 200,
              "headers": {"Content-Type": "application/json"},
              "body": "{\"message\": \"hello from python\"}"
          }

  Api:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "${AppName}-api"

  RootResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt Api.RootResourceId
      PathPart: hello
      RestApiId: !Ref Api

  GetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref RootResource
      RestApiId: !Ref Api
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FuncArn}/invocations
          - { FuncArn: !GetAtt Function.Arn }
        IntegrationResponses:
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref Function
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Api}/*/GET/hello"

  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: GetMethod
    Properties:
      RestApiId: !Ref Api
      StageName: !Ref StageName

Outputs:
  InvokeURL:
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/hello"
  FunctionName:
    Value: !Ref Function
